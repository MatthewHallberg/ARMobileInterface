<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.SpatialTracking</name>
    </assembly>
    <member name="T:UnityEngine.Experimental.XR.Interaction.BaseArmModel">
      <summary>
        <para>The BaseArmModel class is the base class intended for building "Arm Models" for 3 degrees of freedom (3DOF) controllers. An arm model is intended to approximate a 6 degrees of freedom input device using only the rotation of the 3DOF controller input. This is typically achieved by simulating the arm's motion using the rotation, and acceleration information provided by the device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.XR.Interaction.BaseArmModel.headPoseSource">
      <summary>
        <para>The head pose that will be used as an input to the arm simulation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.XR.Interaction.BaseArmModel.poseSource">
      <summary>
        <para>The poseSource holds the input source to be used for the 3 degrees of freedom controller data. It is this input that will be translated to a full 6 DOF pose by the Arm Model implementation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.XR.Interaction.BaseArmModel.TryGetTrackingDataFromSource(UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose,UnityEngine.Pose&amp;)">
      <summary>
        <para>This method is used to allow BaseArmModel specializations to retrieve data from the XRNode system.</para>
      </summary>
      <param name="poseSource">The PoseSource to retrieve data for.</param>
      <param name="resultPose">The resulting pose.</param>
      <returns>
        <para>Returns false if the PoseSource is invalid.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Experimental.XR.Interaction.BasePoseProvider">
      <summary>
        <para>The BasePoseProvider class is a basic implementation of a PoseProvider. A PoseProvider is used to extend the behavior of the TrackedPoseDriver beyond the devices and endpoints that it can normally track. The PoseProvider will override the values normally used by the TrackedPoseDriver. One example use for the PoseProvider is to allow arm models to be attached to the TrackedPoseDriver.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.XR.Interaction.BasePoseProvider.TryGetPoseFromProvider(UnityEngine.Pose&amp;)">
      <summary>
        <para>This method is the interface point between PoseProviders and the TrackedPoseDriver. Specializing types will implement this method to provide pose data back to the attached TrackedPoseDriver. When a PoseProvider is attached to a TrackedPoseDriver, the TrackedPoseDriver will call this interface each time the TrackedPoseDriver requests a pose.</para>
      </summary>
      <param name="output">The pose generated by calling into this PoseProvider. This will be applied to the parent tracked pose driver.</param>
      <returns>
        <para>This method will return true if a valid pose is generated, or false if an error occurs.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.SpatialTracking.PoseDataSource">
      <summary>
        <para>The PoseDataSource class acts as a container for the GetDatafromSource method call that should be used by PoseProviders wanting to query data for a particular pose.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SpatialTracking.PoseDataSource.TryGetDataFromSource(UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose,UnityEngine.Pose&amp;)">
      <summary>
        <para>The GetDatafromSource method is used to query data from the XRNode subsystem based on the provided pose source.</para>
      </summary>
      <param name="poseSource">The pose source to request data for.</param>
      <param name="resultPose">The resulting pose data.</param>
      <returns>
        <para>True, if the pose source is valid, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.SpatialTracking.TrackedPoseDriver">
      <summary>
        <para>
                The TrackedPoseDriver component applies the current Pose value of a tracked device to the transform of the GameObject.

                TrackedPoseDriver can track multiple types of devices including XR HMDs, controllers, and remotes.
            </para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpatialTracking.TrackedPoseDriver.deviceType">
      <summary>
        <para>The device being tracked by the tracked pose driver</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpatialTracking.TrackedPoseDriver.poseProviderComponent">
      <summary>
        <para>Optional: This field holds the reference to the PoseProvider instance that, if set, will be used to override the behavior of the TrackedPoseDriver. When this field is empty, the TrackedPoseDriver will operate as per usual, with pose data being retrieved from the device or pose settings of the TrackedPoseDriver. When this field is set, the pose data will be provided by the attached PoseProvider. The device or pose fields will be hidden as they are no longer used to control the parent GameObject Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpatialTracking.TrackedPoseDriver.poseSource">
      <summary>
        <para>The pose being tracked by the tracked pose driver</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpatialTracking.TrackedPoseDriver.trackingType">
      <summary>
        <para>The tracking type being used by the tracked pose driver</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpatialTracking.TrackedPoseDriver.updateType">
      <summary>
        <para>The update type being used by the tracked pose driver</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpatialTracking.TrackedPoseDriver.DeviceType">
      <summary>
        <para>This is used to indicate which pose the TrackedPoseDriver is currently tracking.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.DeviceType.GenericXRController">
      <summary>
        <para>An XR Controller, use this value for controllers</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.DeviceType.GenericXRDevice">
      <summary>
        <para>An Generic XR Devices, use this value for HMD and AR Mobile device tracking</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.DeviceType.GenericXRRemote">
      <summary>
        <para>An XR Remote, use this value for mobile remotes</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SpatialTracking.TrackedPoseDriver.SetPoseSource(UnityEngine.SpatialTracking.TrackedPoseDriver/DeviceType,UnityEngine.SpatialTracking.TrackedPoseDriver/TrackedPose)">
      <summary>
        <para>This method is used to set the device / pose pair for the SpatialTracking.TrackedPoseDriver. setting an invalid combination of these values will return false.</para>
      </summary>
      <param name="deviceType"></param>
      <param name="pose"></param>
    </member>
    <member name="T:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackedPose">
      <summary>
        <para>This is used to indicate which pose the Tracked Pose Driver is currently tracking</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackedPose.Center">
      <summary>
        <para>The center eye of a HMD style device, this is usually the default for most HMDs</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackedPose.ColorCamera">
      <summary>
        <para>The color camera of a mobile device</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackedPose.Head">
      <summary>
        <para>The head eye of a HMD style device</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackedPose.LeftEye">
      <summary>
        <para>The left eye of a HMD style device</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackedPose.LeftPose">
      <summary>
        <para>The left hand controller pose</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackedPose.RightEye">
      <summary>
        <para>The right eye of a HMD style device</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackedPose.RightPose">
      <summary>
        <para>The right hand contoller pose</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackingType">
      <summary>
        <para>This enum is used to indiciate which parts of the pose will be applied to the parent transform</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackingType.PositionOnly">
      <summary>
        <para>With this setting, only the pose's position will be applied to the parent transform</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackingType.RotationAndPosition">
      <summary>
        <para>With this setting, both the pose's rotation and position will be applied to the parent transform</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.TrackingType.RotationOnly">
      <summary>
        <para>With this setting, only the pose's rotation will be applied to the parent transform</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpatialTracking.TrackedPoseDriver.UpdateType">
      <summary>
        <para>This is used to indicate what points in the frame the tracked pose driver will sample input</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.UpdateType.BeforeRender">
      <summary>
        <para>Only sample input directly before rendering</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.UpdateType.Update">
      <summary>
        <para>Only sample input during the update phase of the frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpatialTracking.TrackedPoseDriver.UpdateType.UpdateAndBeforeRender">
      <summary>
        <para>Sample input at both update, and directly before rendering. For smooth head pose tracking, we recommend using this value as it will provide the lowest input latency for the device. This is the default value for the UpdateType option</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpatialTracking.TrackedPoseDriver.UseRelativeTransform">
      <summary>
        <para>
                  This is used to indicate whether the TrackedPoseDriver will use the object's original transform as its basis.
                </para>
      </summary>
    </member>
  </members>
</doc>
